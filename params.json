{
  "name": "JavaScript recipes   ",
  "tagline": "JavaScript for Node.JS for newcomers from Java/C++",
  "body": "### About\r\nBunch of JavaScript recipes for developers and architects with strongly-typed languages (C++/Java) background\r\n\r\n## Architecture\r\n#### Microservices\r\n* Delivering functionality via network (module + web interface) using lightweight protocol\r\n* \"Fine-grained SOA\" (lightweight, REST, no shared domain model, no ESB)\r\n\r\n##### Pros\r\n* Easy to evolve and scale single component\r\n* Separation of concerns as components are loosely coupled at functional level \r\n\r\n##### Cons\r\n* Deployment of multiple components (addressed by automation and CD)\r\n* Operational complexity (hosting, managing, monitoring of N instead of 1)\r\n\r\n## JavaScript - Intro\r\n* [A re-introduction to JavaScript (JS Tutorial) by Mozilla](https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript)\r\n\r\n## Functions\r\n#### Must read\r\n* [Functions are first class objects in JavaScript](http://helephant.com/2008/08/19/functions-are-first-class-objects-in-javascript/)\r\n* [JavaScript Garden](http://bonsaiden.github.io/JavaScript-Garden/)\r\n* [Understanding callback functions in Javascript](http://recurial.com/programming/understanding-callback-functions-in-javascript/)\r\n* [Functional JavaScript](http://www.hunlock.com/blogs/Functional_Javascript)\r\n\r\n### Binding\r\n#### Must read\r\n* [Getting Out of Binding Situations in JavaScript](http://alistapart.com/article/getoutbindingsituations) by Christophe Porteneuve\r\n* [Function.prototype.bind definition](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fbind)\r\n\r\n#### Example\r\n```\r\nvar x = 9; \r\nvar module = {\r\n  x: 81,\r\n  getX: function() { return this.x; }\r\n};\r\n\r\nmodule.getX(); // 81\r\n\r\nvar getX = module.getX;\r\ngetX(); // 9, because in this case, \"this\" refers to the global object\r\n\r\n// create a new function with 'this' bound to module\r\nvar boundGetX = getX.bind(module);\r\nboundGetX(); // 81\r\n```\r\n\r\n## Collections\r\n### Arrays\r\n* [Add elements at the top of an array](http://stackoverflow.com/questions/8073673/how-can-i-add-new-array-elements-at-the-top-of-an-array-in-javascript)\r\n\r\n### Sorting\r\n#### Example\r\n```\r\n    [\r\n      {name: 'Dominika',age: 2},\r\n      {name: 'Lilia',   age: 31},\r\n      {name: 'Andrei',  age: 32},\r\n      {name: 'Jan',     age: 6}\r\n    ].sort(function(a, b) {\r\n      return a.age - b.age;\r\n    })\r\n```\r\n\r\n## Asyncronous JavaScript\r\n#### Must read\r\n* [Captain Obvious on JavaScript](https://github.com/raganwald/homoiconic/blob/master/2012/01/captain-obvious-on-javascript.md)\r\n* [Callback Hell](http://callbackhell.com/)\r\n\r\n### Promises\r\n#### Must read\r\n* [We have a problem with promises](https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html)\r\n\r\n### Compiled to JavaScript\r\n#### Must read\r\n* [altJS](http://altjs.org/)\r\n\r\n## Node.JS\r\n\r\n### Tutorials\r\n* [Node.js: Style and structure](http://caolanmcmahon.com/posts/nodejs_style_and_structure/) by Caolan McMahon\r\n* [StackOverflow set](http://stackoverflow.com/tags/node.js/info)\r\n\r\n### Debugging\r\n* [And It All Went Horribly Wrong: Debugging Production Systems](http://www.infoq.com/presentations/Debugging-Production-Systems)\r\n\r\n### Event loop\r\n#### Must read\r\n* [Event loop](http://developer.yahoo.com/blogs/ydn/part-1-understanding-event-loops-writing-great-code-11401.html)\r\n\r\n### Generators\r\n#### Must read\r\n* [Analysis of generators and other async patterns in node](http://spion.github.io/posts/analysis-generators-and-other-async-patterns-node.html)\r\n* [A Study on Solving Callbacks with JavaScript Generators](http://jlongster.com/A-Study-on-Solving-Callbacks-with-JavaScript-Generators)\r\n\r\n### Express\r\n#### Must read\r\n* [Understanding Express.js](http://evanhahn.com/understanding-express-js/) as for Express 3.4.0\r\n* [Express sessions](http://blog.modulus.io/nodejs-and-express-sessions)\r\n\r\n### Performance\r\n#### Must read\r\n* [Node.js Benchmarking: Introducing Flod](http://thegoleffect.com/2013/08/node-js-benchmarking-introducing-flod/)\r\n* [Building A Node.JS Server That Won’t Melt](https://hacks.mozilla.org/2013/01/building-a-node-js-server-that-wont-melt-a-node-js-holiday-season-part-5/)\r\n* [THEORETICAL NODE.JS REAL TIME PERFORMANCE](http://blog.3rd-eden.com/post/5809079469/theoretical-node-js-real-time-performance)\r\n\r\n### Hosting\r\n#### Must read\r\n* [Heroku](https://devcenter.heroku.com/articles/nodejs)\r\n* [DigitalOcean](https://www.digitalocean.com/)\r\n\r\n### Great books\r\n* [Mixu's Node.js book](http://book.mixu.net/node/)\r\n* [JavaScript Allongé](https://leanpub.com/javascript-allonge/read)\r\n* [Eloquent JavaScript - A Modern Introduction to Programming](http://eloquentjavascript.net/)\r\n\r\n### Frameworks\r\n* [Node.js frameworks](http://nodeframework.com/)\r\n\r\n***\r\n\r\n### Licence\r\nMIT",
  "google": "UA-42935824-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}